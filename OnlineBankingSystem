# OnlineBankingSystem
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Transaction {
    private String type;
    private double amount;

    public Transaction(String type, double amount) {
        this.type = type;
        this.amount = amount;
    }

    public String getType() {
        return type;
    }

    public double getAmount() {
        return amount;
    }

    @Override
    public String toString() {
        return type + ": $" + amount;
    }
}

class BankAccount {
    private String accountNumber;
    private String owner;
    private double balance;
    private List<Transaction> transactionHistory;

    public BankAccount(String accountNumber, String owner, double initialBalance) {
        this.accountNumber = accountNumber;
        this.owner = owner;
        this.balance = initialBalance;
        this.transactionHistory = new ArrayList<>();
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getOwner() {
        return owner;
    }

    public double getBalance() {
        return balance;
    }

    public List<Transaction> getTransactionHistory() {
        return transactionHistory;
    }

    public void deposit(double amount) {
        balance += amount;
        transactionHistory.add(new Transaction("Deposit", amount));
    }

    public void withdraw(double amount) {
        if (balance >= amount) {
            balance -= amount;
            transactionHistory.add(new Transaction("Withdrawal", amount));
        } else {
            System.out.println("Insufficient funds.");
        }
    }

    public void transfer(BankAccount recipient, double amount) {
        if (balance >= amount) {
            balance -= amount;
            recipient.deposit(amount);
            transactionHistory.add(new Transaction("Transfer to " + recipient.getOwner(), amount));
        } else {
            System.out.println("Insufficient funds.");
        }
    }
}

class OnlineBank {
    private List<BankAccount> accounts;

    public OnlineBank() {
        this.accounts = new ArrayList<>();
    }

    public void createAccount(String accountNumber, String owner, double initialBalance) {
        BankAccount account = new BankAccount(accountNumber, owner, initialBalance);
        accounts.add(account);
        System.out.println("Account created successfully.");
    }

    public BankAccount getAccount(String accountNumber) {
        for (BankAccount account : accounts) {
            if (account.getAccountNumber().equals(accountNumber)) {
                return account;
            }
        }
        return null;
    }
}

public class OnlineBankingSystem {
    public static void main(String[] args) {
        OnlineBank onlineBank = new OnlineBank();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nOnline Banking System");
            System.out.println("1. Create Account");
            System.out.println("2. Deposit");
            System.out.println("3. Withdraw");
            System.out.println("4. Transfer");
            System.out.println("5. View Transaction History");
            System.out.println("6. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter account number: ");
                    String accountNumber = scanner.next();
                    System.out.print("Enter owner name: ");
                    String owner = scanner.next();
                    System.out.print("Enter initial balance: ");
                    double initialBalance = scanner.nextDouble();

                    onlineBank.createAccount(accountNumber, owner, initialBalance);
                    break;

                case 2:
                    performTransaction(scanner, onlineBank, "Deposit");
                    break;

                case 3:
                    performTransaction(scanner, onlineBank, "Withdrawal");
                    break;

                case 4:
                    System.out.print("Enter your account number: ");
                    String senderAccountNumber = scanner.next();
                    System.out.print("Enter recipient account number: ");
                    String recipientAccountNumber = scanner.next();
                    System.out.print("Enter transfer amount: ");
                    double transferAmount = scanner.nextDouble();

                    BankAccount sender = onlineBank.getAccount(senderAccountNumber);
                    BankAccount recipient = onlineBank.getAccount(recipientAccountNumber);

                    if (sender != null && recipient != null) {
                        sender.transfer(recipient, transferAmount);
                    } else {
                        System.out.println("Invalid account number.");
                    }
                    break;

                case 5:
                    System.out.print("Enter your account number: ");
                    String accountNum = scanner.next();
                    BankAccount account = onlineBank.getAccount(accountNum);

                    if (account != null) {
                        displayTransactionHistory(account);
                    } else {
                        System.out.println("Invalid account number.");
                    }
                    break;

                case 6:
                    System.out.println("Exiting the system. Thank you!");
                    System.exit(0);

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void performTransaction(Scanner scanner, OnlineBank onlineBank, String transactionType) {
        System.out.print("Enter your account number: ");
        String accountNumber = scanner.next();
        System.out.print("Enter " + transactionType.toLowerCase() + " amount: ");
        double amount = scanner.nextDouble();

        BankAccount account = onlineBank.getAccount(accountNumber);

        if (account != null) {
            switch (transactionType) {
                case "Deposit":
                    account.deposit(amount);
                    break;
                case "Withdrawal":
                    account.withdraw(amount);
                    break;
            }
        } else {
            System.out.println("Invalid account number.");
        }
    }

    private static void displayTransactionHistory(BankAccount account) {
        System.out.println("\nTransaction History for " + account.getOwner() + "'s account:");
        List<Transaction> transactions = account.getTransactionHistory();

        if (transactions.isEmpty()) {
            System.out.println("No transactions available.");
        } else {
            for (Transaction transaction : transactions) {
                System.out.println(transaction);
            }
        }
    }
}
